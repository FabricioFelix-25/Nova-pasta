PROGRAM Teste_Completo;

DECLARATIONS
    // Testando declarações de variáveis e tipos
    VARTYPE INTEGER: contador, idade;
    VARTYPE REAL: salario, imposto_renda;
    VARTYPE STRING: nome_completo, endereco;
    VARTYPE BOOLEAN: eh_valido;
    VARTYPE CHARACTER: inicial;


    /* Testando declaração de vetores (arrays)
       e vários tipos de comentários. */
    VARTYPE INTEGER []: notas;
    VARTYPE REAL []: medicoes;
ENDDECLARATIONS

FUNCTIONS
    // Testando declaração de função (a ser implementado no sintático)
    FUNCTYPE REAL: calcula_media(PARAMTYPE INTEGER: n1, n2)
        RETURN (n1 + n2) / 2.0;
    ENDFUNCTION
ENDFUNCTIONS

// --- Início da lógica principal do programa ---

salario := 5000.75;
imposto_renda := salario * 0.225;
eh_valido := TRUE;
inicial := 'S'; // Teste de charConst
nome_completo := "Fulano da Silva $. _ 123"; // Teste de stringConst com caracteres permitidos

// Testando identificador longo para truncagem (mais de 32 caracteres)
um_identificador_muito_longo_criado_apenas_para_testar_a_regra_de_truncagem := 1;

// Teste de estrutura IF-ELSE com operadores
IF (idade >= 18 # eh_valido == TRUE) THEN
    PRINT "Maior de idade e valido";
ELSE
    PRINT "Menor de idade ou invalido";
ENDIF;

// Teste de WHILE e caracteres inválidos (serão ignorados)
contador := 10;
WHILE (contador > 0)
    PRINT contador;
    contador := contador - 1;
    invalid@char%aqui; // O analisador léxico deve ignorar '@' e '%'
ENDWHILE;